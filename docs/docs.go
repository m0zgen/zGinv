// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/groups": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Получить список групп",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Group"
                            }
                        }
                    }
                }
            }
        },
        "/servers": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Получить список серверов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Фильтр по проекту",
                        "name": "project",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по региону",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по тегу",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Фильтр по группе",
                        "name": "group",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Server"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Добавить сервер",
                "parameters": [
                    {
                        "description": "Данные сервера",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Server"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Server"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка добавления",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/servers/export": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Экспортировать список серверов",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Server"
                            }
                        }
                    }
                }
            }
        },
        "/servers/{name}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Обновить данные сервера",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя сервера",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновлённые данные",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Server"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Server"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Сервер не найден",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка сохранения",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Servers"
                ],
                "summary": "Удалить сервер",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя сервера",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Сервер удалён",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Ошибка удаления",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Group": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Server"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "db.Server": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "185.100.100.1"
                },
                "comment": {
                    "type": "string",
                    "example": "Резервный DNS"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "dns-kz-1"
                },
                "port": {
                    "type": "integer",
                    "example": 22
                },
                "project": {
                    "type": "string",
                    "example": "openbld"
                },
                "region": {
                    "type": "string",
                    "example": "kz"
                },
                "tags": {
                    "type": "string",
                    "example": "dns,edge"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "user": {
                    "type": "string",
                    "example": "root"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
